res/drawable 中的图片可能会被aapt进行压缩使得二进制文件改变,如果不希望改变,放在res/raw/下
如果使用同一个资源来实例化两个Drawable对象,其中一个Drawable的属性更改,比如alpha,另一个属性也会进行更改,因此,如果需要对重复的对象进行属性更改,应该使用补间动画.











位图文件
位图图形文件（.png、.jpg 或 .gif）。创建 BitmapDrawable。

九宫格文件
具有可拉伸区域的 PNG 文件，允许根据内容调整图像大小 (.9.png)。创建 NinePatchDrawable。

图层列表
管理其他可绘制对象阵列的可绘制对象。它们按阵列顺序绘制，因此索引最大的元素绘制在顶部。创建 LayerDrawable。
*<layer-list
    xmlns:android="http://schemas.android.com/apk/res/android" >
    <item
        android:drawable="@[package:]drawable/drawable_resource"
        android:id="@[+][package:]id/resource_name"
        android:top="dimension"         顶部偏移（像素）。
        android:right="dimension"       右边偏移（像素）。
        android:bottom="dimension"      底部偏移（像素）。
        android:left="dimension" />     左边偏移（像素）。
</layer-list>

<item android:drawable="@drawable/image" /> 定义缩放以适应其容器视图的项目
<item>
  <bitmap android:src="@drawable/image"     避免缩放
          android:gravity="center" />
</item>


状态列表
此 XML 文件为不同状态引用不同位图图形（例如，按下按钮时使用不同的图像）。创建 StateListDrawable。

<selector xmlns:android="http://schemas.android.com/apk/res/android"
    android:constantSize=["true" | "false"] 如果可绘制对象报告的内部大小在状态变更时保持不变，则值为“true”（大小是所有状态的最大值）；如果大小根据当前状态而变化，则值为“false”。默认值为 false。
    android:dither=["true" | "false"]       布尔值。值为“true”时，将在位图的像素配置与屏幕不同时（例如：ARGB 8888 位图和 RGB 565 屏幕）启用位图的抖动；值为“false”时则停用抖动。默认值为 true。
    android:variablePadding=["true" | "false"] >        如果可绘制对象的内边距应根据选择的当前状态而变化，则值为“true”；如果内边距应保持不变（基于所有状态的最大内边距），则值为“false”。启用此功能要求您在状态变更时处理执行布局，这通常不受支持。默认值为 false。
    <item
        android:drawable="@[package:]drawable/drawable_resource"
        android:state_pressed=["true" | "false"]
        android:state_focused=["true" | "false"]
        android:state_hovered=["true" | "false"]
        android:state_selected=["true" | "false"]
        android:state_checkable=["true" | "false"]
        android:state_checked=["true" | "false"]
        android:state_enabled=["true" | "false"]
        android:state_activated=["true" | "false"]
        android:state_window_focused=["true" | "false"] />
</selector>


级别列表
此 XML 文件用于定义管理大量备选可绘制对象的可绘制对象，每个可绘制对象都分配有最大的备选数量。创建 LevelListDrawable。
<level-list
    xmlns:android="http://schemas.android.com/apk/res/android" >
    <item
        android:drawable="@drawable/drawable_resource"
        android:maxLevel="integer"      此项目允许的最高级别。
        android:minLevel="integer" />   此项目允许的最低级别。
</level-list>
此项目应用到 View 后，可通过 setLevel() 或 setImageLevel() 更改级别。

转换可绘制对象:可在两种可绘制对象资源之间交错淡出的可绘制对象。
此 XML 文件用于定义可在两种可绘制对象资源之间交错淡出的可绘制对象。创建 TransitionDrawable。
<transition
xmlns:android="http://schemas.android.com/apk/res/android" >
    <item
        android:drawable="@[package:]drawable/drawable_resource"
        android:id="@[+][package:]id/resource_name"
        android:top="dimension"
        android:right="dimension"
        android:bottom="dimension"
        android:left="dimension" />
</transition>
ImageButton button = (ImageButton) findViewById(R.id.button);
TransitionDrawable drawable = (TransitionDrawable) button.getDrawable();
drawable.startTransition(500);

插入可绘制对象
此 XML 文件用于定义以指定距离插入其他可绘制对象的可绘制对象。当视图需要小于视图实际边界的背景可绘制对象时，此类可绘制对象很有用。
<inset
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:drawable="@drawable/drawable_resource"
    android:insetTop="dimension"
    android:insetRight="dimension"
    android:insetBottom="dimension"
    android:insetLeft="dimension" />

裁剪可绘制对象
此 XML 文件用于定义对其他可绘制对象进行裁剪（根据其当前级别值）的可绘制对象。创建 ClipDrawable。
<clip
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:drawable="@drawable/drawable_resource"
    android:clipOrientation=["horizontal" | "vertical"] horizontal	水平裁剪可绘制对象。
                                                        vertical	垂直裁剪可绘制对象。
    android:gravity=["top" | "bottom" | "left" | "right" | "center_vertical" |
                     "fill_vertical" | "center_horizontal" | "fill_horizontal" |
                     "center" | "fill" | "clip_vertical" | "clip_horizontal"] />
ImageView imageview = (ImageView) findViewById(R.id.image);
ClipDrawable drawable = (ClipDrawable) imageview.getDrawable();
drawable.setLevel(drawable.getLevel() + 1000);


缩放可绘制对象
此 XML 文件用于定义更改其他可绘制对象大小（根据其当前级别值）的可绘制对象。创建 ScaleDrawable
<scale
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:drawable="@drawable/drawable_resource"
    android:scaleGravity=["top" | "bottom" | "left" | "right" | "center_vertical" |         指定缩放后的重力位置。
                          "fill_vertical" | "center_horizontal" | "fill_horizontal" |
                          "center" | "fill" | "clip_vertical" | "clip_horizontal"]
    android:scaleHeight="percentage"        百分比。缩放高度，表示为可绘制对象边界的百分比。值的格式为 XX%。
    android:scaleWidth="percentage" />      百分比。缩放宽度，表示为可绘制对象边界的百分比。值的格式为 XX%。

形状可绘制对象
此 XML 文件用于定义几何形状（包括颜色和渐变）。创建 ShapeDrawable。
<shape
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape=["rectangle" | "oval" | "line" | "ring"] >        "rectangle"	填充包含视图的矩形。这是默认形状。
                                                                    "oval"	适应包含视图尺寸的椭圆形状。
                                                                    "line"	跨越包含视图宽度的水平线。此形状需要 <stroke> 元素定义线宽。
                                                                    "ring"	环形。
                                                                    环形才有的属性:
                                                                    android:innerRadius
                                                                    尺寸。环内部（中间的孔）的半径，以尺寸值或尺寸资源表示。
                                                                    android:innerRadiusRatio
                                                                    浮点型。环内部的半径，以环宽度的比率表示。例如，如果 android:innerRadiusRatio="5"，则内半径等于环宽度除以 5。此值被 android:innerRadius 覆盖。默认值为 9。
                                                                    android:thickness
                                                                    尺寸。环的厚度，以尺寸值或尺寸资源表示。
                                                                    android:thicknessRatio
                                                                    浮点型。环的厚度，表示为环宽度的比率。例如，如果 android:thicknessRatio="2"，则厚度等于环宽度除以 2。此值被 android:innerRadius 覆盖。默认值为 3。
                                                                    android:useLevel
                                                                    布尔值。如果这用作 LevelListDrawable，则此值为“true”。这通常应为“false”，否则形状不会显示。
    <corners    为形状产生圆角。仅当形状为矩形时适用。
        android:radius="integer"                        所有角的半径，以尺寸值或尺寸资源表示。对于每个角，这会被以下属性覆盖。
        android:topLeftRadius="integer"                 尺寸。左上角的半径，以尺寸值或尺寸资源表示。
        android:topRightRadius="integer"                尺寸。右上角的半径，以尺寸值或尺寸资源表示。
        android:bottomLeftRadius="integer"              尺寸。左下角的半径，以尺寸值或尺寸资源表示。
        android:bottomRightRadius="integer" />          尺寸。右下角的半径，以尺寸值或尺寸资源表示。
        tips:必须为每个角提供大于 1 的角半径，否则无法产生圆角。如果希望特定角不要倒圆角，解决方法是使用 android:radius 设置大于 1 的默认角半径，然后使用实际所需的值替换每个角，为不希望倒圆角的角提供零（“0dp”）。
    <gradient   指定形状的渐变颜色。
        android:angle="integer"             整型。渐变的角度（度）。0 为从左到右，90 为从上到上。必须是 45 的倍数。默认值为 0。
        android:centerX="float"             浮点型。渐变中心的相对 X 轴位置 (0 - 1.0)。
        android:centerY="float"             浮点型。渐变中心的相对 Y 轴位置 (0 - 1.0)。
        android:centerColor="integer"       颜色。起始颜色与结束颜色之间的可选颜色，以十六进制值或颜色资源表示。
        android:endColor="color"            颜色。结束颜色，表示为十六进制值或颜色资源。
        android:gradientRadius="integer"    浮点型。渐变的半径。仅在 android:type="radial" 时适用。
        android:startColor="color"          颜色。起始颜色，表示为十六进制值或颜色资源。
        android:type=["linear" | "radial" | "sweep"]        线性渐变。这是默认值。径向渐变。起始颜色为中心颜色。流线型渐变。
        android:useLevel=["true" | "false"] />              如果这用作 LevelListDrawable，则此值为“true”。
    <padding
        android:left="integer"
        android:top="integer"
        android:right="integer"
        android:bottom="integer" />
    <size
        android:width="integer"
        android:height="integer" />
    <solid      用于填充形状的纯色。
        android:color="color" />
    <stroke     形状的笔划中线。
        android:width="integer"     尺寸。线宽
        android:color="color"       颜色。线的颜色
        android:dashWidth="integer" 尺寸。每个短划线的大小 这两个dash必须同时设置才会生效.
        android:dashGap="integer" />尺寸。短划线的间距
</shape>




XML 位图
指向 BitmapDrawable 的资源指针。
<bitmap
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:src="@[package:]drawable/drawable_resource"
    android:antialias=["true" | "false"]        启用或停用抗锯齿。
    android:dither=["true" | "false"]           当位图的像素配置与屏幕不同时（例如：ARGB 8888 位图和 RGB 565 屏幕），启用或停用位图抖动。
    android:filter=["true" | "false"]           启用或停用位图过滤。当位图收缩或拉伸以使其外观平滑时使用过滤。
    android:gravity=["top" | "bottom" | "left" | "right" | "center_vertical" |
                      "fill_vertical" | "center_horizontal" | "fill_horizontal" |
                      "center" | "fill" | "clip_vertical" | "clip_horizontal"]  定义位图的重力。重力指示当位图小于容器时，可绘制对象在其容器中放置的位置。
                                                                                必须是以下一个或多个（用 '|' 分隔）常量值：
    android:mipMap=["true" | "false"]           启用或停用 mipmap 提示。默认值为 false。
    android:tileMode=["disabled" | "clamp" | "repeat" | "mirror"] />            定义平铺模式。当平铺模式启用时，位图会重复。重力在平铺模式启用时将被忽略。

XML 九宫格
<nine-patch
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:src="@[package:]drawable/drawable_resource"
    android:dither=["true" | "false"] />        当位图的像素配置与屏幕不同时（例如：ARGB 8888 位图和 RGB 565 屏幕），启用或停用位图抖动。